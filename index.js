passport.use(
  new GoogleStrategy(
    {
      clientID: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      callbackURL: "https://todogamelist.onrender.com/auth/google/gamenotes",
      userProfileURL: "https://www.googleapis.com/oauth2/v3/userinfo",
    },
    async (accessToken, refreshToken, profile, cb) => {
      try {
        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º email –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ—Ñ–∏–ª—è
        const email = profile.emails?.[0]?.value || profile.email;

        if (!email) {
          console.error("‚ùå Google –Ω–µ –≤–µ—Ä–Ω—É–ª email! –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å:", profile);
          return cb(new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å email –æ—Ç Google"));
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const existingUser = await db.query(
          'SELECT * FROM "users" WHERE email = $1',
          [email]
        );

        let user;

        if (existingUser.rows.length === 0) {
          console.log(`üü¢ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Google: ${email}`);
          const inserted = await db.query(
            'INSERT INTO "users"(email, password) VALUES ($1, $2) RETURNING *',
            [email, "google"]
          );
          user = inserted.rows[0];
        } else {
          user = existingUser.rows[0];
          console.log(`‚úÖ Google –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω –¥–ª—è: ${user.email}`);
        }

        return cb(null, user);
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤ Google —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:", err);
        cb(err);
      }
    }
  )
);
